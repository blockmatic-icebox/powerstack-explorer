{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/compiler/shims/react.ts", "../app/entry.server.tsx", "../app/styles/stitches.config.ts", "/Users/gaboesquivel/Code/powerstack-remix/app/root.tsx", "../app/app-config.ts", "../app/auth.server.ts", "../app/store/index.ts", "../app/library/utils.ts", "../app/library/prisma.ts", "../app/store/ui-state.ts", "../app/store/session-state/default-session-state.ts", "../app/store/session-state/index.ts", "../app/styles/client.context.ts", "/Users/gaboesquivel/Code/powerstack-remix/app/routes/actions/login/$strategy.tsx", "/Users/gaboesquivel/Code/powerstack-remix/app/routes/$account.tsx", "/Users/gaboesquivel/Code/powerstack-remix/app/routes/about.tsx", "../app/components/Flex.tsx", "../app/components/Container.tsx", "../app/components/Header.tsx", "../app/components/icons/GhLoginIcon.tsx", "/Users/gaboesquivel/Code/powerstack-remix/app/routes/index.tsx", "../app/components/WalletLogin.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import type { EntryContext } from '@remix-run/node'\nimport { RemixServer } from '@remix-run/react'\nimport { renderToString } from 'react-dom/server'\n\nimport { getCssText } from './styles/stitches.config'\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext,\n) {\n  let markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />,\n  )\n\n  markup = markup.replace(\n    /<style id=\"stitches\">.*<\\/style>/g,\n    `<style id=\"stitches\">${getCssText()}</style>`,\n  )\n\n  responseHeaders.set('Content-Type', 'text/html')\n\n  return new Response('<!DOCTYPE html>' + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  })\n}\n", "import type * as Stitches from '@stitches/react';\nimport { createStitches } from '@stitches/react'\nimport lightTheme from './light-theme.json'\nimport darkTheme from './dark-theme.json'\n\nconsole.log('Light Theme for Stitches\\n', lightTheme)\nconsole.log('Dark Theme for Stitches\\n', darkTheme)\n\nconst getFontSizes = () => {\n  let fontSizes:any = {}\n  for (const property in lightTheme.typeStyles) {\n    const tempFontSize:string = lightTheme.typeStyles[property as keyof object]['fontSize']\n    fontSizes[property as keyof object] = tempFontSize\n  }\n  return fontSizes\n}\n\nexport const { styled, globalCss, getCssText, config }  = createStitches({\n  theme: {\n    // colors,\n    colors: {\n      ...lightTheme.colors,\n      'header-bg': 'hsla(0,0%,100%,.8)'\n    },\n    sizes: {\n      container: '78.5rem',\n      iconSmall: '1.375rem',\n      iconMedium: '2.75rem'\n    },\n    fontWeights: {\n      body: 400,\n      heading: 700,\n      bold: 700,\n    },\n    space: lightTheme.space,\n    fonts: lightTheme.fonts,\n    fontSizes: getFontSizes()\n  },\n  media: {\n    tabletUp: '(min-width: 768px)',\n    desktopUp: '(min-width: 1024px)',\n    largeDesktopUp: '(min-width: 1680px)',\n  },\n  utils: {\n    p: (value: Stitches.PropertyValue<'padding'>) => ({\n      padding: value,\n    }),\n    pt: (value: Stitches.PropertyValue<'paddingTop'>) => ({\n      paddingTop: value,\n    }),\n    pr: (value: Stitches.PropertyValue<'paddingRight'>) => ({\n      paddingRight: value,\n    }),\n    pb: (value: Stitches.PropertyValue<'paddingBottom'>) => ({\n      paddingBottom: value,\n    }),\n    pl: (value: Stitches.PropertyValue<'paddingLeft'>) => ({\n      paddingLeft: value,\n    }),\n    px: (value: Stitches.PropertyValue<'paddingLeft'>) => ({\n      paddingLeft: value,\n      paddingRight: value,\n    }),\n    py: (value: Stitches.PropertyValue<'paddingTop'>) => ({\n      paddingTop: value,\n      paddingBottom: value,\n    }),\n\n    m: (value: Stitches.PropertyValue<'margin'>) => ({\n      margin: value,\n    }),\n    mt: (value: Stitches.PropertyValue<'marginTop'>) => ({\n      marginTop: value,\n    }),\n    mr: (value: Stitches.PropertyValue<'marginRight'>) => ({\n      marginRight: value,\n    }),\n    mb: (value: Stitches.PropertyValue<'marginBottom'>) => ({\n      marginBottom: value,\n    }),\n    ml: (value: Stitches.PropertyValue<'marginLeft'>) => ({\n      marginLeft: value,\n    }),\n    mx: (value: Stitches.PropertyValue<'marginLeft'>) => ({\n      marginLeft: value,\n      marginRight: value,\n    }),\n    my: (value: Stitches.PropertyValue<'marginTop'>) => ({\n      marginTop: value,\n      marginBottom: value,\n    }),\n\n    bg: (value: Stitches.PropertyValue<'backgroundColor'>) => ({\n      backgroundColor: value,\n    }),\n\n    size: (value: Stitches.PropertyValue<'width'>) => ({\n      width: value,\n      height: value,\n    }),\n  }\n})\n\nexport type CSS = Stitches.CSS<typeof config>;\n\nexport const globalStyles = globalCss({\n  '@font-face': [\n    {\n      fontDisplay: 'swap',\n      fontFamily: 'Gilroy-Bold',\n      src: 'url(/fonts/Gilroy-Bold.ttf)',\n    },\n    {\n      fontDisplay: 'swap',\n      fontFamily: '\"Gilroy-ExtraBold\"',\n      src: 'url(/fonts/Gilroy-ExtraBold.ttf)',\n    },\n    {\n      fontDisplay: 'swap',\n      fontFamily: 'Gilroy-SemiBold',\n      src: 'url(/fonts/Gilroy-SemiBold.ttf)',\n    },\n  ],\n  body: {\n    fontFamily: '$semi-bold',\n    margin: 0,\n  },\n  '*, *::before, *::after': {\n    boxSizing: 'border-box',\n  },\n})\n", "import type { LoaderFunction, MetaFunction } from '@remix-run/node'\nimport { json } from '@remix-run/node'\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useCatch,\n  useLoaderData,\n} from '@remix-run/react'\nimport { useContext, useEffect } from 'react'\nimport { appconfig } from './app-config'\nimport { auth, session_storage } from './auth.server'\nimport { useStore } from './store'\n\nimport ClientStyleContext from './styles/client.context'\nimport { styled, globalStyles } from './styles/stitches.config'\nimport type { AppSessionData } from './types'\n\nconst Container = styled('div', {\n  backgroundColor: '#ff0000',\n  padding: '1em',\n})\n\n\nexport const meta: MetaFunction = () => ({\n  charset: 'utf-8',\n  title: 'Remix with Stitches',\n  viewport: 'width=device-width,initial-scale=1',\n})\n\ninterface DocumentProps {\n  children: React.ReactNode\n  title?: string\n}\n\nconst Document = ({ children, title }: DocumentProps) => {\n  const clientStyleData = useContext(ClientStyleContext)\n\n  // Only executed on client\n  useEffect(() => {\n    // reset cache to re-apply global styles\n    clientStyleData.reset()\n  }, [clientStyleData])\n\n  globalStyles()\n\n  return (\n    <html lang=\"en\">\n      <head>\n        {title ? <title>{title}</title> : null}\n        <Meta />\n        <Links />\n        <style\n          id=\"stitches\"\n          dangerouslySetInnerHTML={{ __html: clientStyleData.sheet }}\n          suppressHydrationWarning\n        />\n      </head>\n      <body>\n        {children}\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  )\n}\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const user = await auth.isAuthenticated(request)\n  const session = await session_storage.getSession(\n    request.headers.get('cookie'),\n  )\n  const session_error = session.get(auth.sessionErrorKey) || null\n\n  const session_data: AppSessionData = {\n    user,\n    appconfig,\n    session_error,\n  }\n  return json(session_data)\n}\n\nexport default function App() {\n  const session_data: AppSessionData = useLoaderData()\n\n  useEffect(() => {\n    useStore.getState().setSessionData(session_data)\n  }, [session_data])\n  return (\n    <Document>\n      <Outlet />\n    </Document>\n  )\n}\n\nexport function CatchBoundary() {\n  const caught = useCatch()\n\n  return (\n    <Document title={`${caught.status} ${caught.statusText}`}>\n      {/* <StitchesUIProvider theme={stitches_theme}> */}\n      <Container>\n        <p>\n          [CatchBoundary]: {caught.status} {caught.statusText}\n        </p>\n      </Container>\n      {/* <StitchesUIProvider/> */}\n    </Document>\n  )\n}\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n  return (\n    <Document title=\"Error!\">\n      <Container>\n        <p>[ErrorBoundary]: There was an error: {error.message}</p>\n      </Container>\n    </Document>\n  )\n}\n", "import * as env from 'env-var'\n\n// PUBLIC CONFIGURATION\n// Be careful to not put secrets here\n\n// placeholder for feature flags\ntype FeatureFlags = {}\n\n// smart contract addresses\ntype Contracts = {}\n\n// apis and other services\ntype Services = {}\n\ntype Analytics = {\n  google: string\n  sentry: string\n}\n\n// ethereum network config\ntype Network = {\n  chain: string\n  chain_id: string\n}\n\ntype Cloudinary = {\n  cloud_name: string\n  api_key: string\n  api_secret: string\n}\n\n// global application configuration based on env\nexport type AppConfig = {\n  network: Network\n  contracts: Contracts\n  services: Services\n  features: FeatureFlags\n  analytics: Analytics\n  cloudinary?: Cloudinary\n}\n\nexport const appconfig: AppConfig = {\n  network: {\n    chain: env.get('CHAIN').required().asString(),\n    chain_id: env.get('CHAIN_ID').required().asString(),\n  },\n  contracts: {},\n  services: {\n    graphql_api: env.get('GRAPHQL_API').required().asString(),\n  },\n  analytics: {\n    google: env.get('GOOGLE_ANALYTICS').asString() || '',\n    sentry: env.get('SENTRY_DSN').asString() || '',\n  },\n  cloudinary: {\n    cloudName: env.get('CLOUDINARY_CLOUD_NAME').required().asString(),\n    apiKey: env.get('CLOUDINARY_API_KEY').required().asString(),\n    apiSecret: env.get('CLOUDINARY_API_SECRET').required().asString(),\n  },\n  features: {},\n}\n", "import { createCookieSessionStorage } from '@remix-run/node'\nimport { ethers } from 'ethers'\nimport { Authenticator, AuthorizationError } from 'remix-auth'\nimport { FormStrategy } from 'remix-auth-form'\nimport type { AppUser } from './types'\nimport nacl from 'tweetnacl'\n\nexport const session_storage = createCookieSessionStorage({\n  cookie: {\n    name: '__session',\n    httpOnly: true,\n    path: '/',\n    sameSite: 'lax',\n    secrets: ['s3cret'], // This should be an env variable\n    secure: process.env.NODE_ENV === 'production',\n  },\n})\n\nexport const auth = new Authenticator<AppUser>(session_storage)\n\nconst enc = new TextEncoder().encode\n\nexport type WalletType = 'metamask' | 'wallet_connect'\n\nconst getFormData = (form: FormData) => {\n  const address = form.get('address')?.toString()\n  const signature = form.get('signature')?.toString()\n  const message = form.get('message')?.toString()\n\n  if (!address || !signature || !message)\n    throw new AuthorizationError(`Invalid login request`)\n\n  return {\n    address,\n    signature,\n    message,\n  }\n}\n\nauth.use(\n  new FormStrategy(async ({ form }) => {\n    const { address, signature, message } = getFormData(form)\n    const addr = await ethers.utils.verifyMessage(message, signature)\n    if (addr !== address) throw new AuthorizationError(`Invalid signature`)\n\n    const user: AppUser = {\n      address: address.toString(),\n      network: 'rinkeby', // TODO: change to dynamically set by the user\n    }\n\n    return user\n  }),\n  // each strategy has a name and can be changed to use another one\n  'metamask',\n)\n\nauth.use(\n  new FormStrategy(async ({ form }) => {\n    const { address, signature, message } = getFormData(form)\n\n    const resp = nacl.sign.detached.verify(\n      enc(message),\n      enc(signature),\n      enc(address),\n    )\n    console.log('auth response', resp)\n    // throw new AuthorizationError(`Invalid signature`)\n\n    const user: AppUser = {\n      address: address.toString(),\n      network: 'solana', // TODO: change to dynamically set by the user\n    }\n\n    return user\n  }),\n  // each strategy has a name and can be changed to use another one\n  'phantom',\n)\n", "import createVanillaStore from 'zustand/vanilla'\nimport type { SetState, GetState } from 'zustand'\nimport create from 'zustand'\nimport { createSelectorHooks } from 'auto-zustand-selectors-hook'\nimport { mountStoreDevtool } from 'simple-zustand-devtools'\nimport { isBrowser } from '~/library'\nimport type { UserInterfaceActions, UserInterfaceState } from './ui-state'\nimport { createUserInterfaceSlice } from './ui-state'\nimport type { AppSessionActions, AppSessionState } from './session-state'\nimport { createAppSessionSlice } from './session-state'\n\n// typescript slicing: https://bit.ly/3qgvLbn\nexport type AppState = AppSessionState & UserInterfaceState\nexport type AppStateActions = AppSessionActions & UserInterfaceActions\nexport type AppStore = AppState & AppStateActions\n\nexport type StoreSlice<T> = (\n  set: SetState<AppStore>,\n  get: GetState<AppStore>,\n) => T\n\n//github.com/pmndrs/zustand#using-zustand-without-react\nexport const store = createVanillaStore<AppStore>(\n  // compose all slices into AppState\n  (set, get) => ({\n    ...createAppSessionSlice(set, get),\n    ...createUserInterfaceSlice(set, get),\n  }),\n)\n\n// standard zustand store https://github.com/pmndrs/zustand\nconst useStoreBase = create(store)\n\n// devtools https://github.com/beerose/simple-zustand-devtools\nif (isBrowser) mountStoreDevtool('AppStore', useStoreBase as any)\n\n// typescrpt selector hooks: https://bit.ly/3fbBHfo\nexport const useStore = createSelectorHooks(useStoreBase)\n", "// This file is exclusively for Utilty functions\n// These fucntions must be pure functions and perform simple tasks\n\nimport _ from 'lodash'\n\nexport const noop = () => {}\nexport const isBrowser = typeof window !== 'undefined'\nexport const isNode = !isBrowser\nexport const userAgent = isBrowser ? _.get(window, 'navigator.userAgent') : ''\nexport const ethereum = isBrowser && _.get(window, 'ethereum')\nexport const isAndroid = /(Android)/i.test(userAgent)\nexport const isIphone = /(iPhone|iPod)/i.test(userAgent)\nexport const isIpad = /(iPad)/i.test(userAgent)\nexport const isMobile = isIphone || isAndroid\n// A mobile browser with ethereum we assume it's Metamask Browser\nexport const isMetamask = isMobile && ethereum\nexport const isPhantom = isBrowser && _.has(window, 'solana.isPhantom')\nexport const solana = isBrowser && _.get(window, 'solana')\n\nexport const formatAddress = (key: string) =>\n  `${key.slice(0, 4)}...${key.slice(-4)}`\n\nexport const base64Encode = (obj: {}) =>\n  Buffer.from(JSON.stringify(obj)).toString('base64')\n\nexport const base64Decode = (str: string) =>\n  JSON.parse(Buffer.from(str, 'base64').toString())\n\nexport function getBase64(file: File): Promise<any> {\n  return new Promise((resolve, rejects) => {\n    var reader = new FileReader()\n    reader.readAsDataURL(file)\n    reader.onload = function () {\n      resolve(reader?.result)\n    }\n    reader.onerror = function (error) {\n      rejects(error)\n    }\n  })\n}\n\nexport const copyToClipboard = (text: string) => {\n  const textField = document.createElement('textarea')\n  textField.innerText = text\n  document.body.appendChild(textField)\n  textField.select()\n  document.execCommand('copy')\n  textField.remove()\n}\n", "import { PrismaClient } from '@prisma/client'\n\nexport let prisma: PrismaClient\n\nif (process.env.NODE_ENV === 'production') {\n  prisma = new PrismaClient()\n} else {\n  if (!global.prisma) {\n    global.prisma = new PrismaClient()\n  }\n  prisma = global.prisma\n}\n", "import type { StoreSlice } from '.'\n\nexport type UserInterfaceState = {\n  show_wallet: boolean\n  show_sidebar: boolean\n}\n\nexport type UserInterfaceActions = {\n  setShowWallet: (value: boolean) => void\n  setShowSidebar: (value: boolean) => void\n}\n\nexport type UserInterface = UserInterfaceState & UserInterfaceActions\n\nconst defaultUserInterfaceState = {\n  show_wallet: false,\n  show_sidebar: false,\n}\n\nexport const createUserInterfaceSlice: StoreSlice<UserInterface> = (set) => ({\n  ...defaultUserInterfaceState,\n\n  setShowWallet: (value) => set({ show_wallet: value }),\n\n  setShowSidebar: (value) => set({ show_sidebar: value }),\n})\n", "import type { AppConfig } from '~/app-config'\nimport type { SessionState } from '.'\n\n// dummy for solve typescript undefined appconfig, we know it'll always be defined but we need to make ts happy\nexport const dummy_appconfig: AppConfig = {\n  network: {\n    chain: '',\n    chain_id: '',\n  },\n  contracts: {},\n  services: {\n    graphql_api: '',\n  },\n  analytics: {\n    google: '',\n    sentry: '',\n  },\n  cloudinary: {\n    cloud_name: '',\n    api_key: '',\n    api_secret: '',\n  },\n  features: {},\n}\n\nexport const defaultAppSessionState: SessionState = {\n  appconfig: dummy_appconfig, // this gets replaced on root.tsx loader.\n  user: null,\n  session_error: null,\n}\n", "import type { StoreSlice } from '..'\nimport type { AppConfig } from '~/app-config'\nimport { defaultAppSessionState } from './default-session-state'\nimport type { AppSessionData, AppUser } from '~/types'\n\nexport type AppSessionState = {\n  appconfig: AppConfig\n  user: AppUser | null\n  session_error: string | null\n}\n\nexport type AppSessionActions = {\n  setUser: (user: AppUser) => void\n  setSessionData: (session_data: AppSessionData) => void\n}\n\nexport type AppSession = AppSessionState & AppSessionActions\n\nexport const createAppSessionSlice: StoreSlice<AppSession> = (set) => ({\n  ...defaultAppSessionState,\n\n  setUser: (user: AppUser) => set({ user }),\n\n  setSessionData: (session_data: AppSessionData) => set(session_data),\n})\n", "import { createContext } from 'react'\n\nexport interface ClientStyleContextData {\n  reset: () => void\n  sheet: string\n}\n\nconst ClientStyleContext = createContext<ClientStyleContextData>({\n  reset: () => {},\n  sheet: '',\n})\n\nexport default ClientStyleContext\n", "import type { ActionFunction } from '@remix-run/node'\nimport { auth } from '~/auth.server'\n\nexport const action: ActionFunction = async ({ request, params }) => {\n  const url = new URL(request.url)\n  const redirect_to = url.searchParams.get('redirect_to')\n\n  return auth.authenticate(params.strategy!, request, {\n    successRedirect: redirect_to!,\n    failureRedirect: redirect_to!,\n  })\n}\n", "import { prisma } from '~/library'\nimport type { accounts } from '@prisma/client'\nimport type { LoaderFunction } from '@remix-run/node'\nimport { json } from '@remix-run/node'\nimport { useLoaderData } from '@remix-run/react'\n\nexport interface AccountProfileLoaderData {\n  account: accounts | null\n}\n\nexport const loader: LoaderFunction = async ({ params }) => {\n  const account = await prisma.accounts.findFirst({\n    where: {\n      account: params.account,\n    },\n  })\n\n  return json<AccountProfileLoaderData>({ account })\n}\n\nexport default function Index() {\n  const { account } = useLoaderData<AccountProfileLoaderData>()\n  return <pre>{JSON.stringify(account, null, 2)}</pre>\n}\n", "import { useStore } from '~/store'\nimport { Header } from '~/components/Header'\n\nexport default function Index() {\n  const { user } = useStore()\n  return (\n    <div>\n      <Header />\n      <h1>Something</h1>\n      <pre>{JSON.stringify(user, null, 2)}</pre>\n    </div>\n  )\n}\n", "import { styled } from '~/styles/stitches.config'\n\nexport const Flex = styled('div', {\n  boxSizing: 'border-box',\n  display: 'flex',\n\n  variants: {\n    direction: {\n      row: {\n        flexDirection: 'row',\n      },\n      column: {\n        flexDirection: 'column',\n      },\n      rowReverse: {\n        flexDirection: 'row-reverse',\n      },\n      columnReverse: {\n        flexDirection: 'column-reverse',\n      },\n    },\n    align: {\n      start: {\n        alignItems: 'flex-start',\n      },\n      center: {\n        alignItems: 'center',\n      },\n      end: {\n        alignItems: 'flex-end',\n      },\n      stretch: {\n        alignItems: 'stretch',\n      },\n      baseline: {\n        alignItems: 'baseline',\n      },\n    },\n    justify: {\n      start: {\n        justifyContent: 'flex-start',\n      },\n      center: {\n        justifyContent: 'center',\n      },\n      end: {\n        justifyContent: 'flex-end',\n      },\n      between: {\n        justifyContent: 'space-between',\n      },\n    },\n    wrap: {\n      noWrap: {\n        flexWrap: 'nowrap',\n      },\n      wrap: {\n        flexWrap: 'wrap',\n      },\n      wrapReverse: {\n        flexWrap: 'wrap-reverse',\n      },\n    },\n  },\n  defaultVariants: {\n    direction: 'row',\n    align: 'stretch',\n    justify: 'start',\n    wrap: 'noWrap',\n  },\n})", "import { styled } from '~/styles/stitches.config'\n\nexport const Container = styled('div', {\n  px: '$regular',\n  maxWidth: '$container',\n  margin: '0 auto',\n  width: '100%',\n})", "import { Flex } from './Flex';\nimport { Container } from './Container';\nimport { styled } from '~/styles/stitches.config'\nimport { Link } from '@remix-run/react'\nimport { GhLoginIcon } from './icons';\n\nexport function Header() {\n  const linkStyles = {\n    color: '$text',\n    ml: '$small',\n    textDecoration: 'none',\n    transition: 'color 0.4s',\n    '&:hover': {\n      color: '$primary-400'\n    }\n  }\n\n  const NavBar = styled(Flex, {\n    backdropFilter: 'saturate(180%) blur(5px)',\n    boxShadow: 'inset 0 -1px 0 0 rgba(0,0,0,.1)',\n    bg: '$header-bg',\n    position: 'absolute',\n    py: '$x-small',\n    top: 0,\n    width: '100%',\n  })\n\n  const LinkItem = styled(Link, linkStyles)\n\n  const AnchorItem = styled('a', {\n    ...linkStyles,\n    '& svg': {\n      size: '$iconSmall'\n    }\n  })\n\n  const VisuallyHidden = styled('h2', {\n    position: 'absolute',\n    clip: 'rect(1px, 1px, 1px, 1px)',\n    overflow: 'hidden',\n    height: '1px',\n    width: '1px',\n    wordWrap: 'normal',\n  })\n\n  const Logo = styled('img', {\n    maxHeight: '$iconMedium',\n    objectFit: 'contain'\n  })\n\n  return (\n    <NavBar>\n      <Container>\n        <Flex justify=\"between\" align=\"center\">\n            {/* ToDo: Logo needs to be improved */}\n            <Logo src=\"/logo-text-icon.png\" alt=\"Blockmatic Logo\" />\n            <Flex\n              justify=\"end\"\n              as=\"nav\"\n              role=\"navigation\"\n              aria-labelledby=\"main-nav-title\"\n              align=\"center\"\n            >\n              <VisuallyHidden>Main navigation</VisuallyHidden>\n              <LinkItem to=\"#\">Login</LinkItem>\n              <AnchorItem\n                aria-label=\"Go to Powerstack Template\"\n                href=\"https://github.com/blockmatic/powerstack-remix\"\n              >\n                <GhLoginIcon />\n              </AnchorItem>\n            </Flex>\n        </Flex>\n      </Container>\n    </NavBar>\n  );\n}\n", "const GhLoginIcon = () => (\n  <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M16 1C7.43625 1 0.5 7.94013 0.5 16.5C0.5 23.3497 4.94075 29.1583 11.0981 31.2056C11.8731 31.3516 12.1573 30.8724 12.1573 30.4603C12.1573 30.0922 12.1444 29.117 12.1379 27.8253C7.82633 28.7605 6.917 25.7458 6.917 25.7458C6.21175 23.9568 5.19262 23.4789 5.19262 23.4789C3.78858 22.5179 5.30112 22.5373 5.30112 22.5373C6.85758 22.6458 7.67521 24.1338 7.67521 24.1338C9.05729 26.504 11.3035 25.8194 12.1896 25.4228C12.3291 24.4205 12.7282 23.7372 13.1713 23.3497C9.72896 22.9622 6.111 21.6292 6.111 15.6901C6.111 13.998 6.71162 12.616 7.70621 11.531C7.53183 11.1396 7.00871 9.56375 7.84183 7.42863C7.84183 7.42863 9.13996 7.01271 12.1043 9.01738C13.3443 8.6725 14.6618 8.502 15.9793 8.49425C17.2968 8.502 18.6143 8.6725 19.8543 9.01738C22.7993 7.01271 24.0975 7.42863 24.0975 7.42863C24.9306 9.56375 24.4075 11.1396 24.2525 11.531C25.2406 12.616 25.8412 13.998 25.8412 15.6901C25.8412 21.6447 22.2181 22.9558 18.7693 23.3368C19.3118 23.8018 19.8156 24.7525 19.8156 26.2043C19.8156 28.2787 19.7962 29.945 19.7962 30.4487C19.7962 30.8556 20.0675 31.34 20.8618 31.185C27.0631 29.1519 31.5 23.3394 31.5 16.5C31.5 7.94013 24.5599 1 16 1\" fill=\"black\"/>\n  </svg>\n)\n\nexport default GhLoginIcon\n", "import { Link } from '@remix-run/react'\nimport { WalletLogin } from '~/components/WalletLogin'\nimport { useStore } from '~/store'\nimport { Header } from '~/components/Header'\n\nexport default function Index() {\n  const { user, appconfig } = useStore()\n  console.log(JSON.stringify(appconfig))\n  return (\n    <div>\n      <Header />\n      <h1>Welcome {user ? 'Back' : null} to PoweStack Remix</h1>\n      <WalletLogin />\n      <ul>\n        <li>\n          <Link to=\"/about\">About</Link>\n        </li>\n      </ul>\n    </div>\n  )\n}\n", "import { styled } from '@stitches/react'\nimport { useStore } from '~/store'\nimport _ from 'lodash'\nimport { ethers } from 'ethers'\nimport { useFetcher, useLocation } from '@remix-run/react'\nimport { ethereum, isPhantom, solana } from '~/library'\n\nconst StyledWallet = styled('div', {\n  border: '1px dotted gray',\n  minHeight: 100,\n})\n\nconst message = 'Login to PowerStack Remix'\n\ntype LoginOptions = {\n  strategy: 'metamask' | 'phantom'\n  signed_message: {\n    signature: string\n    address: string\n    message: string\n  }\n}\n\nconst useLoginSubmit = () => {\n  const location = useLocation()\n  const fetcher = useFetcher()\n  const submit = ({ strategy, signed_message }: LoginOptions) => {\n    fetcher.submit(signed_message, {\n      method: 'post',\n      action: `/actions/login/${strategy}?redirect_to=${\n        location.pathname || '/'\n      }`,\n    })\n  }\n  return submit\n}\n\nexport const WalletLogin = () => {\n  const { user } = useStore()\n  const submit = useLoginSubmit()\n\n  const loginWithMetamask = async () => {\n    if (!ethereum) return alert('Metamask not found')\n    const provider = new ethers.providers.Web3Provider(ethereum)\n    const signer = provider.getSigner()\n    submit({\n      strategy: 'metamask',\n      signed_message: {\n        signature: await signer.signMessage(message),\n        address: await signer.getAddress(),\n        message,\n      },\n    })\n  }\n\n  const loginWithPhantom = async () => {\n    if (!isPhantom) return alert('Phantom not found')\n    try {\n      const resp = await solana.connect({ onlyIfTrusted: true })\n      console.log(resp.publicKey.toString(), solana.isConnected) // 26qv4GCcx98RihuK3c4T6ozB3J7L6VwCuFVc7Ta2A3Uo\n    } catch (err) {\n      alert((err as Error).message)\n    }\n\n    submit({\n      strategy: 'phantom',\n      signed_message: {\n        signature: await solana.signMessage(\n          new TextEncoder().encode(message),\n          'utf8',\n        ),\n        address: resp.publicKey.toString(),\n        message,\n      },\n    })\n  }\n\n  return (\n    <StyledWallet>\n      {/* {console.log('Wat chain', appconfig.network.chain)}\n      <p>Network: {appconfig.network.chain}</p> */}\n      <h3>Rinkeby</h3>\n      <button onClick={loginWithMetamask}>Login with Metamask</button>\n      <p>\n        Address:{' '}\n        {user?.address && user?.network === 'rinkeby'\n          ? user.address\n          : 'wallet not connected'}\n      </p>\n      {}\n      <h3>Solana</h3>\n      <button onClick={loginWithPhantom}>Login with Phantom</button>\n      <p>\n        Address:{' '}\n        {user?.address && user?.network === 'solana'\n          ? user.address\n          : 'wallet not connected'}\n      </p>\n    </StyledWallet>\n  )\n}\n", "export default {'version':'2d790f81','entry':{'module':'/build/entry.client-NELYJJVT.js','imports':['/build/_shared/chunk-4ACWVKRS.js','/build/_shared/chunk-OG5HDHT3.js','/build/_shared/chunk-HSYOKXM2.js','/build/_shared/chunk-6SKE6JXS.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-W5JTOZYM.js','imports':['/build/_shared/chunk-LBZBGASG.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':true},'routes/$account':{'id':'routes/$account','parentId':'root','path':':account','index':undefined,'caseSensitive':undefined,'module':'/build/routes/$account-JGY64W5Z.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/about':{'id':'routes/about','parentId':'root','path':'about','index':undefined,'caseSensitive':undefined,'module':'/build/routes/about-UGLEDKRV.js','imports':['/build/_shared/chunk-63VZOVCT.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/actions/login/$strategy':{'id':'routes/actions/login/$strategy','parentId':'root','path':'actions/login/:strategy','index':undefined,'caseSensitive':undefined,'module':'/build/routes/actions/login/$strategy-Z6YG3TY5.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-RU6YW7SP.js','imports':['/build/_shared/chunk-63VZOVCT.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-2D790F81.js'};", "\nimport * as entryServer from \"/Users/gaboesquivel/Code/powerstack-remix/app/entry.server.tsx\";\nimport * as route0 from \"/Users/gaboesquivel/Code/powerstack-remix/app/root.tsx\";\nimport * as route1 from \"/Users/gaboesquivel/Code/powerstack-remix/app/routes/actions/login/$strategy.tsx\";\nimport * as route2 from \"/Users/gaboesquivel/Code/powerstack-remix/app/routes/$account.tsx\";\nimport * as route3 from \"/Users/gaboesquivel/Code/powerstack-remix/app/routes/about.tsx\";\nimport * as route4 from \"/Users/gaboesquivel/Code/powerstack-remix/app/routes/index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/actions/login/$strategy\": {\n      id: \"routes/actions/login/$strategy\",\n      parentId: \"root\",\n      path: \"actions/login/:strategy\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/$account\": {\n      id: \"routes/$account\",\n      parentId: \"root\",\n      path: \":account\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/about\": {\n      id: \"routes/about\",\n      parentId: \"root\",\n      path: \"about\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route4\n    }\n  };"],
  "mappings": "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",
  "names": []
}
